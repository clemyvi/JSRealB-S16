#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
JSRealB, un réalisateur de texte multilingue: maintenant à jour en français
 et en anglais
\end_layout

\begin_layout Author
Francis Gauthier
\end_layout

\begin_layout Author
Département d'Informatique et de Recherche Opérationnelle
\end_layout

\begin_layout Author
Université de Montréal
\end_layout

\begin_layout Author
2016
\end_layout

\begin_layout Verse
Sous la direction de Guy Lapalme, professeur au département d'informatique
 et de recherche opérationnelle de l'Université de Montréal.
\end_layout

\begin_layout Description
Résumé:
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Section
Modifications apportées aux syntagmes
\end_layout

\begin_layout Standard
Avant d'entamer les différentes sections sur les modifications apportées
 au différents syntagmes, il est intéressant de comprendre le fonctionnement
 de JSRealB et quelles sont les étapes principales qui ont été altérées
 pour pouvoir accomplir toutes les tâches qui nous intéressaient.
 Lorsqu'un noeud interne d'une structure de JSRealB (un syntagme) est appelée
 à être convertie en
\emph on
 string,
\emph default
 il passera par ses différentes étapes:
\end_layout

\begin_layout Enumerate
Classer ses différents constituant (modificateur, noyau, subordonnée ou
 complément)
\end_layout

\begin_layout Enumerate
Créer une liste de ces constituants à réaliser en ordre
\end_layout

\begin_layout Enumerate
Réaliser chacun de ces constituants dans l'ordre prédéfini précédemment
\end_layout

\begin_layout Enumerate
Concaténer chaque réalisation pour former sa propre réalisation
\end_layout

\begin_layout Enumerate
Appliquer des règles de phonétique et de ponctuation sur sa réalisation
\end_layout

\begin_layout Standard
Lors d'ajout aux possibilités de JSRealB, il est rapidement devenu clair
 que plusieurs fonctions du réalisateur de texte nécessiteraient de déconstruire
 certaines sections de l'arbre 
\end_layout

\begin_layout Subsection
Syntagme nominal
\end_layout

\begin_layout Subsection
Syntagme verbal
\end_layout

\begin_layout Subsubsection
Temps composés
\end_layout

\begin_layout Standard
Au moment de sa reprise, JSRealB était en mesure de conjuguer les verbes
 dans leurs formes simples, c'est à dire dans les temps du présent de l'indicati
f, de l'imparfait, de l'impératif présent, du futur simple, du passé simple,
 du conditionnel présent, du subjonctif présent et du subjonctif imparfait
 en français.
 En anglais, c'est au 'present' et au 'past tense' que les déclinaisons
 étaient possibles.
 Les conjugaisons étaient directement tirées du lexique et des tables de
 règles fournies.
 Il était évident que la continuité de JSRealB passerait par la conjugaison
 des temps composés.
 Cela impliquait d'ajouter un ou plusieurs auxiliaires et un participe qui
 devrait aussi s'accorder (en français).
\end_layout

\begin_layout Standard
Tout d'abord, l'utilisation des temps composés diffère assez entre les deux
 langues utilisées par JSRealB.
 Alors que le français contient huit temps simple, formé d'un seul verbe
 accordé, l'anglais n'en possède que deux.
 Par contre, l'anglais n'a pas nécessairement moins de déclinaison possible,
 seulement plusieurs verbes auxiliaires sont utilisés.
 Par exemple, le verbe aller au futur nécessite le verbe auxiliaire 
\emph on
will
\emph default
, comme dans la phrase 
\emph on
I will go.
 
\emph default
Une autre phrase un peu plus complexe en anglais requiert l'utilisation
 de plusieurs verbes auxiliaires, comme dans l'exemple
\emph on
 I will not have been going.
 
\emph default
Dans l'exemple précédent, 
\emph on
will
\emph default
, 
\emph on
have
\emph default
 et 
\emph on
been
\emph default
 sont tous des verbes auxilaires.
 D'un autre côté, on ne retrouve, en français, qu'un seul verbe auxiliaire
 à la fois, soit être ou avoir.
 Alors qu'en français l'auxiliaire à utiliser dépend du verbe employé, en
 anglais, les verbes auxiliaires dépendent du temps de verbe.
 La conjugaison d'une langue par rapport à l'autre n'est pas nécessairement
 plus compliquée, mais elle a définitivement des règles assez différentes.
 C'est pourquoi le module de conjugaison de JSRealB qui se rapportait facilement
 à la table de règle du langage devra maintenant se complexifier quelque
 peu pour pallier aux différences des langues.
 L'implémentation française et anglaise et leurs différences seront expliquées.
\end_layout

\begin_layout Standard
Pour ce qui est de l'usage français, la première étape de l'implémentation
 a été l'ajout des auxiliaires au lexique.
 Dans son état actuel, le lexique ne comportait pas d'information sur les
 auxiliaires.
 Ces informations étaient disponibles dans les fichiers à partir desquels
 est généré le lexique.
 Il a donc fallu quelques lignes de code pour extraire cette information
 supplémentaire de nos ressources.
 À partir du moment où le lexique a été actualisé avec ces modifications,
 on retrouvait alors un attribut à chaque verbe dans le lexique.
 L'attribut 
\emph on
aux 
\emph default
du lexique a comme valeur possible 
\emph on
êt
\emph default
: être, 
\emph on
av
\emph default
: avoir ou 
\emph on
aê
\emph default
: être ou avoir.
 En ce moment, pour les verbes qui comportaient deux auxiliaires, par exemple
 le verbe 
\emph on
changer,
\emph default
 sont accordés avec l'auxiliaire avoir.
 Moins de 3% des verbes présent dans le lexique ont cette propriété et il
 n'est pas possible à l'heure actuelle de forcer l'auxiliaire à celui de
 son choix, mais ce serait une option facilement réalisable dans le futur.
 En bref, pour accorder un temps composé, on appelera à nouveau la fonction
 de conjugaison, avec comme paramètre l'auxiliaire tiré du lexique, le temps
 de l'auxiliaire (tiré d'une table de règle) et avec les éléments de propagation
 du verbe en question (personne, genre et nombre par exemple).
 L'auxiliaire sera ensuite concaténé avec le participe passé qui est le
 verbe à être accordé au participe passé.
 Le participe passé francophone requiert parfois un accord, donc la fonction
 qui sera appelée ne sera pas celle de conjugaison générale, mais une fonction
 précise pour l'accord du participe passé, qui sera décrite dans la prochaine
 section.
 Plusieurs autres mots auxiliaires et adverbes peuvent se glisser entre
 ou autour du verbe et de son auxiliaire.
 Ceux-ci sont décrits dans la section 
\emph on
Les options
\emph default
, plus basse.
\end_layout

\begin_layout Standard
D'un autre côté, pour la langue anglaise, trois temps sont considérés comme
 simple: 
\emph on
present, past 
\emph default
et
\emph on
 future.
 
\emph default
Ensuite, ce que l'on peut considérer comme un temps composé est ce qu'on
 appelle les temps 
\emph on
perfect
\emph default
, soit: 
\emph on
present perfect, past perfect
\emph default
 et 
\emph on
future perfect
\emph default
.
 Ces temps requiert tous d'appliquer l'auxiliaire être et le participe passé,
 tout comme en français.
 Par contre, en ajoutant les options de verbe, soit la forme passive, progressiv
e (dite 
\emph on
continuous
\emph default
 en anglais), les auxiliaires changent dépendant de la combinaison des options,
 donc on doit passer une série de test avant d'affirmer qu'elle sera le
 premier auxiliaire et ensuite le second, s'il doit y en avoir un et etc.
 Pour ce faire, il existe une sorte de priorité qui nous simplifie la tâche.
 En fait, 
\end_layout

\begin_layout Subsubsection
Accord du participe passé
\end_layout

\begin_layout Standard
En français, le participe passé doit s'accorder en fonction de son auxiliaire.
 En débutant, il peut être 
\series bold
seul
\series default
, c'est-à-dire sans auxiliaire, comme dans le groupe nominal 
\emph on
les fenêtres ouvertes.

\emph default
 Dans ce cas, une première modification a due être apportée pour propager
 les propriétés de genre et de nombre aux verbes qui se trouveraient dans
 un syntagme nominal francophone.
 Ainsi, lors de l'appel de conjugaison du verbe au participe passé, les
 propriétés du noyau nominal sont passés en paramètre et un appel simple
 d'accord au participe passé réalisera l'accord en genre et en nombre.
\end_layout

\begin_layout Standard
Pour ce qui est d'accorder le participe passé avec 
\series bold
l'auxiliaire être
\series default
, il ne suffit que de modifications mineures au code.
 Lorsque le code s'éxécute, il s'assure d'abord que le verbe est dans une
 forme composée, à l'instar du participe passé employé seul.
 Ensuite, comme le lexique contient maintenant les informations sur les
 auxiliaires de chaque verbe, il suffit de décliner le participe passé selon
 une table de règle une fois que l'auxiliaire a été identifier comme étant
 le verbe 
\emph on
être
\emph default
.
 
\end_layout

\begin_layout Standard
Pour ce qui est de l'accord avec 
\series bold
l'auxiliaire avoir
\series default
, c'est ici qu'on aura plus de difficultés pour accorder le participe.
 Tout comme à l'écrit, il est parfois plus difficile de bien accorder le
 participe passé avec avoir, car il doit s'accorder en genre et en nombre
 avec son complément d'objet direct, si celui-ci est avant le verbe.
 Le premier type de phrase où un tel accord est nécessaire est un syntagme
 nominal à l'intérieur duquel on trouvera un syntagme propositionnel complément
 au nom, par exemple: 
\emph on
Les maisons que nous avons rencontrées.

\emph default
 La première étape pour implémenter cet accord a été de mettre en place
 le syntagme propositionnel, qui sera décrit plus loin.
 Ensuite, de par ce nouveau syntagme, les informations du noyau (maison)
 sont propagés vers les éléments du syntagme verbal en fonction du premier
 pronom rencontré.
 C'est-à-dire que dans l'exemple plus haut, le pronom introduisant la propositio
n est 
\emph on
que,
\emph default
 et dans ce cas, la proposition aura comme complément d'objet direct son
 syntagme nominal parent 
\emph on
(les maisons 
\emph default
dans l'exemple précédent).
 Dans le cas où le syntagme propositionnel est 
\emph on
qui, 
\emph default
comme dans l'exemple 
\emph on
Les garçons qui jouent des tours,
\emph default
 alors le syntagme nominal 
\emph on
les garçons 
\emph default
agit en tant que sujet à la proposition.
 Dans le cas où le premier pronom est 
\emph on
que, 
\emph default
les informations du complément d'objet direct sont passés en paramètres
 au module de conjugaison qui accordera le participe passé avec auxiliaire
 avoir, s'il y en a un.
 C'était donc le premier cas de figure intéressant, mais le participe passé
 avec auxiliaire avoir se présente autrement aussi.
\end_layout

\begin_layout Standard
Le deuxième type de phrase où le participe passé devait être accordé avec
 avoir que JSRealB peut accorder est une phrase où un pronom fait office
 de complément d'objet direct placé avant le verbe, comme dans la phrase
 
\emph on
les pommes, je les ai cueillies 
\emph default
ou bien 
\emph on
je l'ai apprécié, ta soeur.
 
\emph default
En prenant comme exemple la phrase 
\emph on
les pommes, je les ai cueillies, 
\emph default
il nous aurait fallu la structure suivante: 
\begin_inset Formula 
\[
S(NP(D(“le”),N(“pomme”).n(“p”),Pro(“je”).pe(1),VP(Pro(“le”).pe(3).n(“p”),V(“cueillir”).t(“pc”)))
\]

\end_inset

Dans cette structure, le pronom 
\emph on
les
\emph default
 est inclus manuellement.
 Le lecteur sait que 
\emph on
les
\emph default
 a comme antécédent 
\emph on
les pommes
\emph default
, mais pour le programme, ce n'est pas facile.
 Pour ne pas avoir à spécifier les antécédents, il a été plus pratique d'ajouter
 la méthode de pronominalisation des syntagmes nominaux.
 Telle que discutée plus haut, celle-ci est très utile pour faire apparaître
 des pronoms qui ont déjà les propriétés de leurs antécédents, car ils ont
 été construit à partir de ceux-ci.
 Lors de la pronominalisation, si le syntagme nominal est dans le syntagme
 verbal, on considère qu'il est alors complément d'objet direct.
 En le pronominalisant, le pronom vient se placer avant le verbe, ce qui
 crée une situation où le participe passé devra s'accorder.
 C'est alors que JSRealB propagera les propriétés du pronom au verbe comme
 étant celles de l'objet direct lui étant associé.
\end_layout

\begin_layout Standard
En comblant ces deux types de phrases principales, JSRealB s'assure de pouvoir
 accorder le participe passé avec l'auxiliaire avoir dans la plupart des
 cas que l'on retrouve en français.
 Par contre, avec des phrases plus complexes ou des figures de style, il
 probable que la propagation ne se fasse pas correctement, surtout si l'accord
 du participe passé requiert une interprétation de nature humaine.
 Il est d'ailleurs à noter que JSRealB ne réalise en ce moment que des phrases
 individuelles, donc si l'antécédent d'un pronom se trouve dans une phrase
 différente, il ne serait possible que de les accorder par le passage à
 une variable.
 Voir la section 
\emph on
Clone et déréférencement 
\emph default
pour plus de détails.
\end_layout

\begin_layout Subsubsection
Les verbes impératifs
\end_layout

\begin_layout Subsubsection
Les options (forme négative, passive et progressive)
\end_layout

\begin_layout Subsection
Syntagme adjectival
\end_layout

\begin_layout Subsection
Syntagme propositionnel
\end_layout

\begin_layout Subsubsection
Utilisation
\end_layout

\begin_layout Subsubsection
Propagation
\end_layout

\begin_layout Subsection
Syntagme adverbial, prépositionnel et coordonné
\end_layout

\begin_layout Section
Modifications apportées à la mise en forme
\end_layout

\begin_layout Subsection
Les différents types de phrase
\end_layout

\begin_layout Subsubsection
Exclamative
\end_layout

\begin_layout Subsubsection
Interrogative
\end_layout

\begin_layout Subsection
Liaison par le trait d'union
\end_layout

\begin_layout Section
Autres modifications
\end_layout

\begin_layout Subsection
Clone et déréférencement
\end_layout

\begin_layout Section
Résultats
\end_layout

\begin_layout Section
Limitations et travail futur
\end_layout

\begin_layout Section
Conclusion
\end_layout

\end_body
\end_document
